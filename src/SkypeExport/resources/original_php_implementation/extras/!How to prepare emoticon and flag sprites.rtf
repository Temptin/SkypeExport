{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 EMOTICONS:\
\
Get the icons from Skype.app/Contents/Resources.Emoticons/Emoticons.SkypeEmoticonset\
\
Rename them to more usable format with:\

\b ls * | sed -E 'p;s/-[0-9]+//g' | xargs -n2 mv
\b0 \
\
Go to http://css-sprit.es/ (or if that site has died, look for any other "css sprite generator", such as http://spritegen.website-performance.org/) and put all images in the form. File type: PNG (full alpha). Stylesheet lang: CSS. Compression: No (this just makes the stylesheet harder to post-process). Rollover effect: None.\
\
Save the generated sprite-sheet and CSS. To save the CSS I had to Cmd+A and copy the whole page, then remove all but the CSS, due to an annoying on-click thing in the CSS field.\
\
In the code you've now got, do the following preparations:\
* Search and replace all height: 19px and width: 19px statements with an empty string (we don't need these duplicates all over the place since all emoticons are this size, except the bug icon which is 18px tall instead; in fact, remove the height: 18px statement for the bug icon too (it's safe to do so, we have a 1px bottom spacer, that's fine)).\
* Search and replace "-0px" with "0".\
* Now add width: 19px and height: 19px to the main .sprites \{\} class.\
* Remove the three background-image/color/repeat attributes in .sprites \{\} and instead write "background: transparent url(emoticons.png) no-repeat 0 0;"\
* Add "display: inline-block;" to the top of the .sprites \{\} class.\
* Rename ".sprites" to "div.ss"\
* Do a search and replace for "#emoticon-", replace it with "div.ss."\
* Search and replace all "_png" with an empty string (we don't need that part)\
\
Your code should now look something like:\
div.ss \{ \
	display: inline-block;\
	width: 19px;\
 	height: 19px;\
 	\
    background: transparent url(emoticons.png) no-repeat 0 0;\
 \} \
 \
 div.ss.angel \{ \
     \
     \
    background-position  : 0 0; \
 \} \
\

\b Time to clean up this dirty code!
\b0 \
\
Go to http://www.codebeautifier.com/ and paste the CSS. In the top-right corner, set Compression to "High (moderate readability, smaller size)". Also check the "Remove last ;" checkbox. Process the CSS and copy the result.\
\
Your CSS will now look something like:\
div.ss\{display:inline-block;width:19px;height:19px;background:transparent url(emoticons.png) no-repeat 0 0\}\
div.ss.angel\{background-position:0 0\}\
div.ss.angry\{background-position:-19px 0\}\
div.ss.bandit\{background-position:-38px 0\}\
div.ss.bear\{background-position:-57px 0\}\
\
Next, do a search and replace for "\{" with " \{".\
\
Now clean up a bug in the CSS sprite sheet creator. It basically sorts drink before drunk but then writes their coordinates reversed in the stylesheet: The two lines:\
div.ss.drink \{background-position:-380px 0\}\
div.ss.drunk \{background-position:-399px 0\}\
are wrong. You need to swap their coordinates.\
\
Lastly, format the div.ss \{ \} class nicely (look at div.icons in style.css to see how it should be done) and create the appropriate " > span" class (once again, look at div.icons and replicate that).\
\
The end! The sprite-sheet is done!\
\
\
\
\
Now take Emoticons.plist from the EmoticonSet, and all the "div.ss.NAME \{background-position:-X 0\}" lines (put them in a file called Emoticons.css), and run it through this code to generate the final code, where each "class" has been renamed to the proper "id" for that emoticon (we need this so that we get a straight mapping from emoticon-ID to class, rather than having to do a lookup for each smiley):\
\
<?php\
\
$css = @file("Emoticons.css");\
$css = array_map('trim', $css);\
$css = join("\\n", $css);\
\
$xml = simplexml_load_file("Emoticons.plist");\
for ($i=0, $len=count($xml->dict->dict->dict); $i < $len; $i++) \{\
	$sID = (string)$xml->dict->dict->dict[$i]->string;\
	$sFileName = preg_replace("/^emoticon-\\d\{4\}-|\\.png$/", "", (string)$xml->dict->dict->key[$i]);\
	if ($sID == $sFileName) continue;\
	$css = str_replace("div.ss.$\{sFileName\}", "div.ss.$\{sID\}", $css); // converts filename to real id\
\}\
\
$css = explode("\\n", $css);\
natsort($css);\
echo "<pre>".join("\\n", $css)."</pre>";\
\
?>\
\
The output is what you should put in style.css, as it gives you a proper mapping between internal ID and image, without requiring any id->filename/class lookup step.\
\
\
\
\
\
\
\
FLAGS:\
\
Take the 16x11 flag map (it's called WorldFlags_16x11.png or something, inside the Skype app bundle) and rename it to worldflags.png, then run this script to get the CSS. The CSS is ready for use, apart from missing the base-definition, but look in style.css for that. Also, remove the "AA" and "ZZ" entries as they are test-images and not valid flags, and Skype does not actually show those test images even if you try (flag:aa) or (flag:zz), so they are totally useless to keep in the CSS. Without further ado:\
\
<pre><?php\
\
function img_is_black(&$gdimg) \{\
	$sx = imagesx($gdimg); $sy = imagesy($gdimg);\
	for ($x=0; $x<$sx; $x++) \{\
		for ($y=0; $y<$sy; $y++) \{\
			if (0 != imagecolorat($gdimg, $x, $y)) return false;\
		\}\
	\}\
	return true;\
\}\
\
// each flag is 16x11 pixels. the first, empty spacer to the left is 16 pixels wide, and the empty spacer at the top is 11 pixels tall.\
$flagimg = imagecreatefrompng("worldflags.png");\
$alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\
foreach(range('A','Z') as $code1) \{\
	foreach(range('A','Z') as $code2) \{\
		$countrycode = strtolower($code1.$code2); // skype logs use lowercase flag-ids, so might aswell make ours lowercase to skip conversion\
		$xOffset = (1 + strpos($alpha, $code1)) * 16;\
		$yOffset = (1 + strpos($alpha, $code2)) * 11;\
		\
		$tmpimg = imagecreatetruecolor(16, 11); // will be used for testing whether a flag exists at an offset\
		imagecopy($tmpimg, $flagimg, 0, 0, $xOffset, $yOffset, 16, 11); // copy the thing at this offset\
		$has_flag = (!img_is_black($tmpimg));\
		imagedestroy($tmpimg);\
		\
		if ($has_flag) \{\
			echo "div.flag.$\{countrycode\} \{background-position:-$\{xOffset\}px -$\{yOffset\}px\}\\n";\
		\}\
	\}\
\}\
\
?></pre>}