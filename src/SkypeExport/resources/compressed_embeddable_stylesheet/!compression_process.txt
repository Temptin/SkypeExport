compaction: codebeautifier.com, paste code, set compression to highest, keep optimize on "safe optimizations" (the highest optimization gives us a 16kb result rather than 20kb but it will break the images in the stylesheet for some reason), set "remove last ;"

copy the compacted result into style_compact.css and remove the /* comments */, of which there should be about two-three, and merge those lines instead.

prepare png images by making them even smaller: go to http://www.smushit.com/ysmush.it/ and upload all pngs and get the resulting images; they will be smaller. this tool optimizes the PNG binary layout without losing any data whatsoever. the process will save ~34kb in total on all the images, leading to a leaner embedded stylesheet size.

data insertion: make a copy of style_compact.css, called style_compact_data.css, then go into the images_smushed folder and run "./encode_images.sh". this gives you a bunch of text files with base64-encoded image data. open up style_compact_data.css in a text editor and replace each path (such as "url(images/calls_24x18.png)" with the full text of the corresponding encoded file, i.e. the url should look like: "url(data:image/png;base64,[stuff...])"). when you've done that for all files, you can remove the encoded text files. BEWARE: the emoticons.png and worldflags sheets are larger than IEv8 can handle as data:// URI, so doing this process loses support for IE8, but who the hell cares about that browser? its rendering was imperfect anyway to begin with (lacking opacity). I think the limit is 32768 bytes for the entire data:// uric, so if one of your encode outputs is larger than that, it will not be compatible with that crappy browser.

the final result will take 50kb of CSS and 200kb of images and compress it into a single 213kb line, ready for embedded inclusion into the final log outputs.

to get it into C++, use "file2header t style_compact_data.css > style_compact_data_css.h"